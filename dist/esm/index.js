#!/usr/bin/env node
import{Command as K}from"commander";import{readFileSync as L}from"fs";import c from"ora";import x from"path";import e from"chalk";import b from"boxen";import a from"execa";import F from"path";import O from"rimraf";function j(t){try{return a.commandSync("git rev-parse --is-inside-work-tree",{stdio:"ignore",cwd:t}),!0}catch{}return!1}function T(t){try{return a.commandSync("hg --cwd . root",{stdio:"ignore",cwd:t}),!0}catch{}return!1}function I(t,r){let n=!1;try{a.commandSync("git --version",{stdio:"ignore",cwd:t})}catch{return"git-not-found"}if(j(t)||T(t))return"already-in-repository";try{a.commandSync("git init",{stdio:"ignore",cwd:t})}catch{return"git-init-failed"}n=!0;try{a.commandSync("git checkout -b main",{stdio:"ignore",cwd:t}),a.commandSync("git add -A",{stdio:"ignore",cwd:t}),a.sync("git",["commit",`--message="${r}"`],{stdio:"ignore",cwd:t})}catch{if(n)try{O.sync(F.join(t,".git"))}catch{}return"git-commit-failed"}return"success"}import G from"fs";async function v(t,r={recursive:!0}){try{return G.existsSync(t)?"already":(await G.promises.mkdir(t,r),"success")}catch{return"failed"}}import E from"got";async function z(t){return(await E.head(t).catch(n=>n)).statusCode===200}async function C({organization:t,repository:r,example:n,branch:i}){return z(`https://api.github.com/repos/${t}/${r}/contents/examples/${encodeURIComponent(n)}?ref=${i}`)}import D from"got";import H from"tar";import{Stream as U}from"stream";import{promisify as B}from"util";import{join as M}from"path";import{createWriteStream as N,promises as f}from"fs";var Y=B(U.pipeline),J=".uhuu-example.temp";async function V(t){let r=M(process.cwd(),`${J}-${Date.now()}`);try{return await Y(D.stream(t),N(r)),r}catch{try{await f.unlink(r)}catch{}return}}async function R({root:t,name:r,branch:n,repo:i,org:s}){let l=await V(`https://codeload.github.com/${s}/${i}/tar.gz/${n}`);if(!l)return"download-failed";try{await H.x({file:l,cwd:t,strip:3,filter:o=>!!o.includes(`${i}-${n}/examples/${r}/`)})}catch{try{await f.unlink(l)}catch{}return"extract-failed"}try{await f.unlink(l)}catch{}return"success"}import W from"execa";import X from"which-pm-runs";function g(){try{let{name:t}=X()||{};return t??"npm"}catch{return"npm"}}async function _(t){try{return await W(g(),["install"],{cwd:t,stdio:"ignore"}),!0}catch{return!1}}var y="uhuuio",h="uhuu-starter",w="main";var q=async(t,r)=>{let n=g();typeof t!="string"&&(c("You must specify an example name").fail(),console.log(b([e`You can find {bold uhuu} examples at:`,"",e`{dim.cyan github.com/}{cyan uhuuio/uhuu-starter/tree/master/examples}`].join(`
`),{title:e`No example provided`,titleAlignment:"center",borderStyle:"round",borderColor:"gray",padding:1,textAlignment:"center",margin:1,float:"center"})),process.exit(1));let i=x.resolve(r||t),s=c("Checking if example exists in uhuu").start();await C({organization:y,repository:h,example:t,branch:w})?s.succeed("Example found in uhuu repository"):(s.fail(`Could not locate an example named ${e.red(`"${t}"`)}`),console.log(b([e`You can find {bold uhuu} examples at:`,"",e`{dim.cyan github.com/}{cyan uhuuio/uhuu-starter/tree/master/examples}`].join(`
`),{title:e`Example not found`,titleAlignment:"center",borderStyle:"round",borderColor:"gray",padding:1,textAlignment:"center",margin:1,float:"center"})),process.exit(1));let o=i.includes(x.resolve(process.cwd()))?i.replace(x.resolve(process.cwd()),"."):i,d=c(`Creating directory ${e.cyan(o)}.`).start(),$=await v(i);$==="already"?d.warn(`Directory ${e.cyan(o)} already exists. Files will be overwritten.`):$==="failed"?(d.fail(`Failed to create directory ${e.cyan(o)}.`),process.exit(1)):d.succeed(`Directory ${e.cyan(o)} created.`);let m=c(`Downloading files for example ${e.cyan(t)}. This might take a moment.`).start(),S=await R({root:i,name:t,branch:w,repo:h,org:y});S==="download-failed"&&(m.fail(`Failed to download files for example ${e.cyan(t)}.`),process.exit(1)),S==="extract-failed"&&(m.fail(`Failed to extract files for example ${e.cyan(t)}.`),process.exit(1)),m.succeed(`Files downloaded and extracted for example ${e.cyan(t)}.`);let k=c("Installing packages. This might take a couple of minutes.").start();await _(i)?k.succeed("Packages installed successfully."):k.fail("Failed to install packages. You can try again manually.");let u=c(`Initializing Git in ${e.cyan(o)}.`).start(),p=I(i,"Initial commit from Create uhuu App");p==="git-not-found"&&u.warn("Git was not found in your PATH. Skipping Git initialization."),p==="already-in-repository"&&u.warn(`Directory ${e.cyan(o)} is already a Git repository. Skipping Git initialization.`),p==="git-init-failed"&&u.warn(`Failed to initialize Git repository in ${e.cyan(o)}.`),p==="git-commit-failed"&&u.warn(`Failed to commit initial commit to Git repository in ${e.cyan(o)}.`),p==="success"&&u.succeed("Created Git repository with initial commit.");let P=n==="yarn"?"":"run ";console.log(b([e`Created {cyan ${t}} at {cyan ${o}}`,"",e`Start using your new {bold uhuu} template example by running:`,"",e`  {bold cd} {cyan ${o}}`,e`  {bold ${n} ${P}}{cyan uhuu}`].join(`
`),{title:e`{bold.green Success!}`,titleAlignment:"center",borderStyle:"round",padding:1,float:"center",margin:1,borderColor:"gray"}))},A=q;var Q=()=>{let t=JSON.parse(L(`${__dirname}/../package.json`,"utf8")),r=new K;r.version(t.version,"-v, --version","Output the current version.").usage("<command> [options]").helpOption("-h, --help","Output usage information.").option("-s, --source <source-path>","specify a custom source of plugins").option("-b, --branch <source-git-branch>","specify a custom branch in source of plugins").option("-o, --preset <preset-name>","specify a preset to use for the project").option("-l, --lucky","use this option to generate a project with random answers").option("-e, --example <example> [destination]","get a clone of an example from the uhuu-starter repository").option("-d, --download <download>","specify a download type (zip | git) of source","zip").option("-p, --project <project-name>","specify a project type to use").option("--disable-telemetry","disable telemetry data collection").allowUnknownOption(!0).allowExcessArguments(!0).action(async(n,i)=>{try{if(i.getOptionValue("example")){A(i.getOptionValue("example"),i.args[0]);return}}catch{}}),r.parse(process.argv)};Q();
